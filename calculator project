#include <iostream>
#include <string>
#include <vector>
using namespace std;

// Function to convert Roman numeral to integer
int RomanToInt(string x) {
  int total = 0;
  for (int i = 0; i <= x.length(); i++) {
    switch (x[i]) {
    case 'I':
      total += 1;
      break;

    case 'V':
      if (i != 0 && x.at(i - 1) == 'I') {
        total += 3;
        break;
      } else {
        total += 5;
        break;
      }

    case 'X':
      if (i != 0 && x.at(i - 1) == 'I') {
        total += 8;
        break;
      } else {
        total += 10;
        break;
      }

    case 'L':
      if (i != 0 && x.at(i - 1) == 'X') {
        total += 30;
        break;
      } else {
        total += 50;
        break;
      }

    case 'C':
      if (i != 0 && x.at(i - 1) == 'X') {
        total += 80;
      } else {
        total += 100;
        break;
      }
    }
  }
  return total;
}
// Function to convert calculated integer to Roman numeral
string IntToRom(int y) {
  string totalRom = "";
  while (y > 0) {
    if (y >= 100) {
      totalRom += "C";
      y -= 100;
    } else if (y >= 90) {
      totalRom += "XC";
      y -= 90;
    } else if (y >= 50) {
      totalRom += "L";
      y -= 50;
    } else if (y >= 40) {
      totalRom += "XL";
      y -= 40;
    } else if (y >= 10) {
      totalRom += "X";
      y -= 10;
    } else if (y >= 9) {
      totalRom += "IX";
      y -= 9;
    } else if (y >= 5) {
      totalRom += "V";
      y -= 5;
    } else if (y >= 4) {
      totalRom += "IV";
      y -= 4;
    } else if (y >= 1) {
      totalRom += "I";
      y -= 1;
    }
  }
  return totalRom;
}

int main() {
  string Roman1;
  string Roman2;

  // Prompt user for input
  cout << "Please enter first Roman numeral: ";
  cin >> Roman1;
  cout << "Please enter second Roman numeral: ";
  cin >> Roman2;

  // Function call
  /*Takes converted integers and calculates total*/
  int num1, num2, numTotal;

  num1 = RomanToInt(Roman1);
  num2 = RomanToInt(Roman2);
  numTotal = num1 + num2;
  /*Resubmission changes to handle user interaction more gracefully, took away
   * output of numbers that were input and lables the total and Roman Numeral
   * result */
  cout << endl;
  cout << "Your number is: " << numTotal << endl;

  // Function call
  /*Takes total integer and converts to
  corresponding Roman numeral*/
  string Rom3;

  Rom3 = IntToRom(numTotal);

  cout << "Your Roman Numeral is: " << Rom3 << endl;

  return 0;
}
